<!DOCTYPE html>
<html>
<head>
  <title>Hoodz</title>
  <%= stylesheet_link_tag    'application', media: 'all', 'data-turbolinks-track' => true %>
  <%= javascript_include_tag 'application', 'data-turbolinks-track' => true %>
  <%= csrf_meta_tags %>
</head>
<body>

<h1>Hoodz</h1>

<% if current_user %>
  <p>
    Welcome back, <%= current_user.first_name %> |
    <%= link_to 'Log Out', sessions_path, method: :delete %>
  </p>
<% else %>
  <p>
    <%= link_to 'Sign Up', new_user_path %> |
    <%= link_to 'Log In', sessions_new_path %>
  </p>
<% end %>
<hr>

<%= yield %>

<div id="map"></div>

<script type="text/javascript">
  
  var width = 1000;
  var height = 800;

  //create svg element
  var svg = d3.select('#map')
              .append('svg')
              .attr('width', width)
              .attr('height', height);

  d3.json("../assets/bklyn.geojson", function(error, json) {
    console.log(json.features);
    hoods_data = json.features;

    console.log(hoods_data.length)

    var hslScale = d3.scale.linear()
                   .domain([0, hoods_data.length])
                   .range([60, 300])

    // find centroid of geojson
    // create first guess for projection position
    var center = d3.geo.centroid(json)
    var scale = 130 * width;
    var offset = [ width/2 - 750, height/2 + 350];
    var projection = d3.geo.mercator()
        .scale(scale)
        .center(center)
        .translate(offset);

    // create path
    var path = d3.geo.path().projection(projection);

    var hoods = svg.append('g')
        .selectAll('path')
        .data(hoods_data)
        .enter()
        .append('path')
        .attr('id', function(d,i) { return 'hood-' + i; })
        .attr('d', path)
        .attr('stroke', 'darkblue')
        .attr('stroke-width','1')
        .attr('fill', function(d,i) { 
          console.log(i, hslScale(i))
          return 'hsl(' + hslScale(i) + ',50%,80%)'; 
        });

    d3.select('g').attr('class', 'hoods')




    // hoods.on('mouseover', hoodMouseover);
    // hoods.on('mouseleave', hoodMouseleave);
    hoods.on('click', hoodClick);

    var quizHood = d3.select('#hood-'+selectRandomHood())
    console.log(quizHood)
  });

  function hoodClick() {
    var clickedHood = d3.select(this);
    console.log(clickedHood)
    console.log(clickedHood.classed('wrong-guess'))
    var isWrong = clickedHood.classed('wrong-guess')
    if (!isWrong) {
      clickedHood
        .classed('wrong-guess', true)
        .transition()
        .duration(500)
        .attr('fill', 'red')
    } else {
      clickedHood
        .classed('wrong-guess', false)
        .transition()
        .duration(500)
        .attr('fill', 'lightgrey')
    }
      // .attr('stroke', 'white');
      // .attr('stroke-width','1');
  };

  function hoodMouseover() {
    d3.select(this)
        .transition()
        .duration(250)
        .attr('fill','yellow')
        .transition()
        .duration(500)
        .attr('fill', 'steelblue')
  };

  function hoodMouseleave() {
    d3.select(this)
        .transition()
        .duration(500)
        .attr('fill','steelblue')
  }
  
  function selectRandomHood() {
    randNum = Math.floor(Math.random() * hoods_data.length)
    console.log(randNum);
    return randNum
  }

</script>



</body>
</html>
